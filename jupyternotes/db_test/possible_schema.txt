When creating the database:

Each element in the collection is going to be a main HTS combination (meaning the 4 first digits of the HTS number)

Definitions:

-HTS_main_description -> The description of the main HTS code in each JSON file previously parsed from the main HTS file downloaded from customs
    For example, we have file "0101.json":
        This file starts with this object:
        {
            "htsno": "0101",
            "indent": 0,
            "description": "Live horses, asses, mules and hinnies:",
            "superior": null,
            "units": [],
            "general": "",
            "special": "",
            "other": "",
            "footnotes": [],
            "quotaQuantity": "",
            "additionalDuties": "",
            "addiitionalDuties": null
        }
        We take the "description" value and use it to name each element in the collection.

    -HTS_key -> Can be grabbed from the file itself e.g. "0101.json", the collection element will have "0101" as HTS_key
    -Data -> this will be the full on data object from the JSON file.


COLLECTION EXAMPLE:
[
    {
        '_id': systemgenerated,
        'hts_main_description': <<Gathered from the json file first element description>>
        'hts_key': <<Gathered from the filename>>
        'data': [<<This is the data from the json file>>]
    },
    {
        '_id': systemgenerated,
        'hts_main_description': <<Gathered from the json file first element description>>
        'hts_key': <<Gathered from the filename>>
        'data': [<<This is the data from the json file>>]
    },
    ...
]


CASE SCENARIOS:
1) There are some records inside the json files that have the following information under these keys:
    "htsno": "",
    "superior": "true"

    Normally the "htsno" key will have a value with a complete o partial HTS Number in string format.
    When the "htsno" is an empty string "", it means the information on this record is an extra category on the parent record.

    There is another key called "indent", this key defines the indentation level of the tariff, it is a number defining the current subcategory level of that hts.

    For instance, lets take a look at this list of records:
    [
        {
            "htsno": "0101",
            "indent": 0,                <-- First level of iteration
            "description": "Livestock"
        },
        {
            "htsno": "0101.00",
            "indent": 1,                <-- Second level of iteration
            "description": "Cattle"
        },
        {
            "htsno": "",
            "indent": 2,                <-- Third level of iteration
            "description": "Horses"
        },
        {
            "htsno": "0101.00.02",
            "indent": 3,
            "description": "Male"
        },
        {
            "htsno": "0101.00.03",
            "indent": 3,                <-- Fourth level of iteration
            "description": "Female"
        },
        {
            "htsno": "0101.00.06.00",
            "indent": 4,                <-- Fifth level of iteratio
            "description": "For mount"
        },
        {
            "htsno": "",
            "indent": 2,
            "description": "Cows"
        },
        {
            "htsno": "0101.00.05",
            "indent": 3,
            "description": "Male"
        },
        {
            "htsno": "0101.00.06",
            "indent": 3,
            "description": "Female"
        },
        {
            "htsno": "0101.00.06.01",
            "indent": 3,
            "description": "For slaughter"
        },
        {
            "htsno": "0101.00.10",
            "indent": 2,
            "description": "Marranos male and female"
        },
        {
            "htsno": "0101.00.10.02",
            "indent": 3,
            "description": "For slaughter"
        }

    ]

    If I search for the record "0101.00.03" -> The result should iterate the tree, giving me the following in the description: "Livestock | Cattle | Horses | Female". Because it will run through each indent and find the appropriate result. As shown with the arrows pointing to the indents used. <--

    But, how to for instance get all the information on "0101.00.05" ??????
    
    <NEED TO DEFINE AN ALGORITHM THAT ITERATES OR THAT ORGANIZES THE OBJECT IN SUCH A WAY THAT THIS ITERATION IS POSSIBLE>

    Possibly solved, check test_iterations.ipynb

